<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.elasticsearch</groupId>
    <artifactId>elasticsearch-transport-memcached</artifactId>
    <version>2.7.0-SNAPSHOT</version>
    <packaging>jar</packaging>
    <name>Elasticsearch Memcached transport plugin</name>
    <description>The memcached transport plugin allows to use the REST interface over memcached.</description>
    <url>https://github.com/elastic/elasticsearch-transport-memcached/</url>
    <inceptionYear>2009</inceptionYear>
    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>
    <scm>
        <connection>scm:git:git@github.com:elastic/elasticsearch-transport-memcached.git</connection>
        <developerConnection>scm:git:git@github.com:elastic/elasticsearch-transport-memcached.git</developerConnection>
        <url>http://github.com/elastic/elasticsearch-transport-memcached</url>
    </scm>

    <parent>
        <groupId>org.elasticsearch</groupId>
        <artifactId>elasticsearch-parent</artifactId>
        <version>1.7.0</version>
    </parent>

    <properties>
        <!-- You can add any specific project property here -->
        <es.plugin.port>11211</es.plugin.port>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
        </dependency>
        <dependency>
            <groupId>com.carrotsearch.randomizedtesting</groupId>
            <artifactId>randomizedtesting-runner</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-test-framework</artifactId>
        </dependency>
        <dependency>
            <groupId>org.elasticsearch</groupId>
            <artifactId>elasticsearch</artifactId>
        </dependency>

        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
        </dependency>

        <!-- Memcached for tests -->
        <dependency>
            <groupId>net.spy</groupId>
            <artifactId>spymemcached</artifactId>
            <version>2.11.5</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.elasticsearch</groupId>
            <artifactId>elasticsearch</artifactId>
            <type>test-jar</type>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.properties</include>
                </includes>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*</include>
                </includes>
            </testResource>
        </testResources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.carrotsearch.randomizedtesting</groupId>
                <artifactId>junit4-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>tests</id>
                        <phase>test</phase>
                        <goals>
                            <goal>junit4</goal>
                        </goals>
                        <configuration>
                            <heartbeat>20</heartbeat>
                            <jvmOutputAction>pipe,warn</jvmOutputAction>
                            <leaveTemporary>true</leaveTemporary>
                            <listeners>
                                <report-ant-xml mavenExtensions="true"
                                                dir="${project.build.directory}/surefire-reports"/>
                                <report-text
                                        showThrowable="true"
                                        showStackTraces="true"
                                        showOutput="${tests.output}"
                                        showStatusOk="false"
                                        showStatusError="true"
                                        showStatusFailure="true"
                                        showStatusIgnored="true"
                                        showSuiteSummary="true"
                                        timestamps="false"/>
                                <report-execution-times historyLength="20" file="${basedir}/${execution.hint.file}"/>
                            </listeners>
                            <assertions>
                                <enable/>
                                <disable package="${tests.assertion.disabled}"/>
                                <!-- pass org.elasticsearch to run without assertions -->
                            </assertions>
                            <parallelism>1</parallelism>
                            <balancers>
                                <execution-times>
                                    <fileset dir="${basedir}" includes="${execution.hint.file}"/>
                                </execution-times>
                            </balancers>
                            <includes>
                                <include>**/*Tests.class</include>
                                <include>**/*Test.class</include>
                            </includes>
                            <excludes>
                                <exclude>**/Abstract*.class</exclude>
                                <exclude>**/*StressTest.class</exclude>
                            </excludes>
                            <jvmArgs>
                                <param>-Xmx${tests.heap.size}</param>
                                <param>-Xms${tests.heap.size}</param>
                                <param>-Xss256k</param>
                                <param>-XX:MaxPermSize=128m</param>
                                <param>-XX:MaxDirectMemorySize=512m</param>
                                <param>-Des.logger.prefix=</param>
                                <param>-XX:+HeapDumpOnOutOfMemoryError</param>
                                <param>-XX:HeapDumpPath=${tests.heapdump.path}</param>
                            </jvmArgs>
                            <shuffleOnSlave>${tests.shuffle}</shuffleOnSlave>
                            <sysouts>${tests.verbose}</sysouts>
                            <seed>${tests.seed}</seed>
                            <haltOnFailure>${tests.failfast}</haltOnFailure>
                            <uniqueSuiteNames>false</uniqueSuiteNames>
                            <systemProperties>
                                <java.io.tmpdir>.</java.io.tmpdir>
                                <!-- we use '.' since this is different per JVM-->
                                <!-- RandomizedTesting library system properties -->
                                <tests.bwc>${tests.bwc}</tests.bwc>
                                <tests.bwc.path>${tests.bwc.path}</tests.bwc.path>
                                <tests.bwc.version>${tests.bwc.version}</tests.bwc.version>
                                <tests.jvm.argline>${tests.jvm.argline}</tests.jvm.argline>
                                <tests.processors>${tests.processors}</tests.processors>
                                <tests.appendseed>${tests.appendseed}</tests.appendseed>
                                <tests.iters>${tests.iters}</tests.iters>
                                <tests.maxfailures>${tests.maxfailures}</tests.maxfailures>
                                <tests.failfast>${tests.failfast}</tests.failfast>
                                <tests.class>${tests.class}</tests.class>
                                <tests.method>${tests.method}</tests.method>
                                <tests.nightly>${tests.nightly}</tests.nightly>
                                <tests.verbose>${tests.verbose}</tests.verbose>
                                <tests.badapples>${tests.badapples}</tests.badapples>
                                <tests.weekly>${tests.weekly}</tests.weekly>
                                <tests.awaitsfix>${tests.awaitsfix}</tests.awaitsfix>
                                <tests.slow>${tests.slow}</tests.slow>
                                <tests.timeoutSuite>${tests.timeoutSuite}</tests.timeoutSuite>
                                <tests.showSuccess>${tests.showSuccess}</tests.showSuccess>
                                <tests.integration>${tests.integration}</tests.integration>
                                <tests.client.ratio>${tests.client.ratio}</tests.client.ratio>
                                <tests.enable_mock_modules>${tests.enable_mock_modules}</tests.enable_mock_modules>
                                <tests.assertion.disabled>${tests.assertion.disabled}</tests.assertion.disabled>
                                <tests.rest>${tests.rest}</tests.rest>
                                <tests.rest.suite>${tests.rest.suite}</tests.rest.suite>
                                <tests.rest.blacklist>${tests.rest.blacklist}</tests.rest.blacklist>
                                <tests.rest.spec>${tests.rest.spec}</tests.rest.spec>
                                <tests.network>${tests.network}</tests.network>
                                <tests.cluster>${tests.cluster}</tests.cluster>
                                <tests.heap.size>${tests.heap.size}</tests.heap.size>
                                <tests.filter>${tests.filter}</tests.filter>
                                <tests.version>${elasticsearch.version}</tests.version>
                                <tests.locale>${tests.locale}</tests.locale>
                                <tests.timezone>${tests.timezone}</tests.timezone>
                                <es.node.local>${env.ES_TEST_LOCAL}</es.node.local>
                                <es.node.mode>${es.node.mode}</es.node.mode>
                                <es.logger.level>${es.logger.level}</es.logger.level>
                                <tests.security.manager>${tests.security.manager}</tests.security.manager>
                                <tests.compatibility>${tests.compatibility}</tests.compatibility>
                                <java.awt.headless>true</java.awt.headless>
                                <!-- everything below is for security manager / test.policy -->
                                <junit4.tempDir>${project.build.directory}</junit4.tempDir>
                                <java.security.policy>${basedir}/dev-tools/tests.policy</java.security.policy>
                            </systemProperties>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <appendAssemblyId>false</appendAssemblyId>
                    <outputDirectory>${project.build.directory}/releases/</outputDirectory>
                    <descriptors>
                        <descriptor>${basedir}/src/main/assemblies/plugin.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <repositories>
        <repository>
            <id>oss-snapshots</id>
            <name>Sonatype OSS Snapshots</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
        </repository>
    </repositories>
</project>
